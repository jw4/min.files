#!/usr/bin/env bash

   LIGHT_RED="\[\033[1;31m\]"
LIGHT_YELLOW="\[\033[1;33m\]"
        CYAN="\[\033[0;36m\]"
  LIGHT_CYAN="\[\033[1;36m\]"
       WHITE="\[\033[0;37m\]"
  COLOR_NONE="\[\e[0m\]"

# Return the prompt symbol to use, colorized based on the return value of the
# previous command.
function set_prompt_symbol () {
  if test "$1" -eq 0 ; then
    PROMPT_SYMBOL="\$"
  else
    PROMPT_SYMBOL="${LIGHT_RED}$1 \$${COLOR_NONE}"
  fi
}

function set_date_prompt () {
  DATE_PROMPT="${WHITE}$(date +'%H:%M:%S')${COLOR_NONE} "
}

# Set the full bash prompt.
function set_bash_prompt () {
  # Set the PROMPT_SYMBOL variable. We do this first so we don't lose the
  # return value of the last command.
  set_prompt_symbol $?

  # set date string
  set_date_prompt

  USERLINE="${CYAN}\u@${LIGHT_CYAN}\h${COLOR_NONE}:${LIGHT_YELLOW}\w${COLOR_NONE} "

  # Set the bash prompt variable.
  PS1="
${USERLINE}
${DATE_PROMPT}${PROMPT_SYMBOL} "
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt
